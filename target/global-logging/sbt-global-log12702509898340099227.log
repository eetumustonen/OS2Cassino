[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\eetum\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\eetum\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (AdoptOpenJDK Java 11.0.11)
[debug]       Load.loadUnit: plugins took 143.5826ms
[debug]       Load.loadUnit: defsScala took 0.4308ms
[debug] [Loading] Scanning directory C:\Users\eetum\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eetum\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.7193 ms
[debug]           Load.resolveProject(global-plugins) took 66.982ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\eetum\.sbt\1.0\plugins, plugins: List(<none>))) took 133.2775ms
[debug] [Loading] Done in C:\Users\eetum\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 164.3886ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4369ms
[debug]     Load.loadUnit(file:/C:/Users/eetum/.sbt/1.0/plugins/, ...) took 324.9048ms
[debug]   Load.apply: load took 592.2301ms
[debug]   Load.apply: resolveProjects took 8.471ms
[debug]   Load.apply: finalTransforms took 87.2501ms
[debug]   Load.apply: config.delegates took 12.0637ms
[debug]   Load.apply: Def.make(settings)... took 521.3377ms
[debug]   Load.apply: structureIndex took 124.0594ms
[debug]   Load.apply: mkStreams took 2.747ms
[info] loading global plugins from C:\Users\eetum\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7455.0507ms
[debug]           Load.loadUnit: plugins took 39.0298ms
[debug]           Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\eetum\IdeaProjects\OS2Cassino\project
[debug]             Load.loadUnit: mkEval took 11.9311ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eetum\IdeaProjects\OS2Cassino\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9147 ms
[info] loading settings for project os2cassino-build from idea.sbt ...
[debug]               Load.resolveProject(os2cassino-build) took 3.5771ms
[debug]             Load.loadTransitive: finalizeProject(Project(id os2cassino-build, base: C:\Users\eetum\IdeaProjects\OS2Cassino\project, plugins: List(<none>))) took 6.1044ms
[debug] [Loading] Done in C:\Users\eetum\IdeaProjects\OS2Cassino\project, returning: (os2cassino-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3269.0622ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.3513ms
[debug]         Load.loadUnit(file:/C:/Users/eetum/IdeaProjects/OS2Cassino/project/, ...) took 3317.8801ms
[debug]       Load.apply: load took 3320.2377ms
[debug]       Load.apply: resolveProjects took 0.1954ms
[debug]       Load.apply: finalTransforms took 32.1909ms
[debug]       Load.apply: config.delegates took 0.412ms
[debug]       Load.apply: Def.make(settings)... took 87.823ms
[debug]       Load.apply: structureIndex took 31.8283ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\Users\eetum\IdeaProjects\OS2Cassino\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 10482.0349ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\eetum\IdeaProjects\OS2Cassino
[debug]       Load.loadUnit: mkEval took 0.4709ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.7814 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 37.3598ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\eetum\IdeaProjects\OS2Cassino, plugins: List(<none>))) took 43.0193ms
[debug] [Loading] Done in C:\Users\eetum\IdeaProjects\OS2Cassino, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1766.6884ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.7841ms
[debug]   Load.loadUnit(file:/C:/Users/eetum/IdeaProjects/OS2Cassino/, ...) took 12259.5919ms
[debug] Load.apply: load took 12262.1542ms
[debug] Load.apply: resolveProjects took 0.1422ms
[debug] Load.apply: finalTransforms took 28.3405ms
[debug] Load.apply: config.delegates took 0.4458ms
[debug] Load.apply: Def.make(settings)... took 83.4149ms
[debug] Load.apply: structureIndex took 22.0043ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to OS2Cassino (in build file:/C:/Users/eetum/IdeaProjects/OS2Cassino/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56870 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56870, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to OS2Cassino (in build file:/C:/Users/eetum/IdeaProjects/OS2Cassino/)
[debug] > Exec(idea-shell, None, None)
